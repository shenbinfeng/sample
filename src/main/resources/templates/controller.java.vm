package ${cfg.packageParent}.controller.${package.ModuleName};

import ${cfg.packageParent}.dto.${package.ModuleName}.${entity}QueryDTO;
import ${cfg.packageParent}.service.${package.ModuleName}.${table.serviceName};
import ${cfg.packageParent}.entity.${package.ModuleName}.${entity};
import ${cfg.packageParent}.core.result.ExecutionResult;
import ${cfg.packageParent}.dto.${package.ModuleName}.${entity}InDTO;
import org.springframework.beans.BeanUtils;
import org.springframework.web.bind.annotation.*;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import com.baomidou.mybatisplus.core.metadata.IPage;
import ${cfg.packageParent}.dto.${package.ModuleName}.${entity}OutDTO;
import javax.annotation.Resource;

/**
 * <p>
 * 前端控制器
 * </p>
 *
 * @author ${author}
 * @date  ${date}
 */
@Api(value = "${cfg.moduleDes}", tags = "${cfg.moduleDes}")
@RestController
@RequestMapping("/${package.ModuleName}/${table.entityPath}")
public class ${table.controllerName} {
	@Resource
    public ${table.serviceName} i${entity}Service;

    @ApiOperation(value = "创建")
    @PostMapping
    public ExecutionResult create(@RequestBody ${entity}InDTO entityInDTO) {
        ${entity} entity = new ${entity}();
        BeanUtils.copyProperties(entityInDTO, entity);
        return i${entity}Service.create(entity);
    }

    @ApiOperation(value = "修改")
    @PatchMapping("/{id}")
    public ExecutionResult update(@PathVariable Long id, @RequestBody ${entity}InDTO entityInDTO) {
        ${entity} entity = new ${entity}();
        BeanUtils.copyProperties(entityInDTO, entity);
        entity.setId(id);
        return i${entity}Service.update(entity);
    }

    @ApiOperation(value = "获取分页列表")
    @GetMapping
    public ExecutionResult<IPage<${entity}OutDTO>> getList(${entity}QueryDTO queryDto) {
        return i${entity}Service.getList(queryDto);
    }

    @ApiOperation(value = "删除")
    @DeleteMapping("/{id}")
    public ExecutionResult delete(@PathVariable Long id) {
        return i${entity}Service.delete(id);
    }
}